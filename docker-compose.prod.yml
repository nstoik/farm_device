version: '3.8'

services:
    device:
        build:
            target: prod-stage

    database_management:
        image: nstoik/fd_device:{FD_DEVICE}
        container_name: fd_database_management
        command: pipenv run fd_device database database_upgrade --revision "head"
        build:
            context: ./device
            dockerfile: Dockerfile
            target: prod-stage
        networks:
            - farm_device
        depends_on:
            - database
        restart: on-failure

    1wire:
        labels:
            - traefik.http.routers.fd_1wire.rule=Host(`${TRAEFIK_DOMAIN}`) && PathPrefix(`/`)"
            - traefik.http.routers.fd_1wire.entrypoints=websecure
            - traefik.http.routers.fd_1wire.tls.certresolver=letsencrypt

    traefik:
        ports:
            - $TRAEKIK_ACCESS_PORT:80
            - $TRAEKIK_ACCESS_PORT_SECURE:443
        volumes:
            - ./traefik/traefik.prod.yml:/etc/traefik/traefik.yml
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.fm_traefik.rule=Host(`traefik.${TRAEFIK_DOMAIN}`)"
            - "traefik.http.routers.fm_traefik.entrypoints=websecure"
            - "traefik.http.routers.fm_traefik.tls.certresolver=letsencrypt"
            - "traefik.http.routers.fm_traefik.service=api@internal"

    pgadmin:
        labels:
            - traefik.http.routers.fd_pgadmin.rule=Host(`${TRAEFIK_DOMAIN}`) && PathPrefix(`/pgadmin`)"
            - traefik.http.routers.fd_pgadmin.entrypoints=websecure
            - traefik.http.routers.fd_pgadmin.tls.certresolver=letsencrypt
