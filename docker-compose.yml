version: '3.8'

services: 
    device:
        image: nstoik/fd_device:${FD_DEVICE}
        container_name: fd_device
        build:
            context: ./device
            dockerfile: Dockerfile
        environment:
            FD_DEVICE_CONFIG: ${FD_DEVICE_CONFIG}
            RABBITMQ_HOST_ADDRESS: ${RABBITMQ_HOST_ADDRESS}
        networks:
            - farm_device
        depends_on:
            - "database"
            - "1wire"
        volumes:
            - "logs:/logs"
            - "/sys/devices/w1_bus_master1:/sys/devices/w1_bus_master1"
        restart: unless-stopped

    1wire:
        image: nstoik/fd_1wire:${FD_1WIRE}
        container_name: fd_1wire
        build:
            context: ./1wire
            dockerfile: Dockerfile
        devices:
            - "/dev/i2c-1:/dev/i2c-1"
        networks:
            - farm_device
        ports:
        - "2121:2121"
        restart: unless-stopped

    # traefik container configuration below
    traefik:
        image: traefik:latest
        container_name: fd_traefik
        networks:
            - farm_device
        # ports are set in the docker-compose.dev and docker-compose.prod files
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock:ro
            - traefik:/letsencrypt
        environment:
            - CLOUDFLARE_EMAIL=${CLOUDFLARE_EMAIL}
            - CLOUDFLARE_DNS_API_KEY=${CLOUDFLARE_DNS_API_KEY}
        restart: unless-stopped
        depends_on:
            - device
            - 1wire
        labels:
        -  custom.label=farm_device

    # standard docker containers below

    database:
        image: postgres:14
        container_name: fd_database
        restart: unless-stopped
        environment:
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_DB: ${POSTGRES_DB}
        volumes:
            - "dbdata:/var/lib/postgresql/data"
        networks:
            - farm_device

    pgadmin:
        container_name: fd_pgadmin
        image: dpage/pgadmin4:latest
        environment:
            PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
            PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
        depends_on:
            - "database"
        volumes:
            - pgadmin:/root/.pgadmin
            - pgadmin:/var/lib/pgadmin
            - ./pgadmin/server_definition.json:/pgadmin4/servers.json:ro
        ports:
            - "5052:80"
        networks:
            - farm_device
        restart: unless-stopped
  
volumes:
    logs:
    dbdata:
    pgadmin:
    traefik:

networks:
    farm_device:
        name: farm_device